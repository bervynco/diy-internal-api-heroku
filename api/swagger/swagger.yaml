swagger: "2.0"
info:
  version: "0.0.1"
  title: DIY Internal REST API
# during dev, should point to your local machine
host: localhost:3494
# basePath prefixes all resource paths 
basePath: /api/v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  jwt:
    type: apiKey
    name: Authorization
    in: header
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/login:
    x-swagger-router-controller: UserController
    post:
      description: "user login, anonymous"
      operationId: login
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: "email and password"
          required: true
          schema:
            $ref: "#/definitions/LoginReq"
      responses:
        "200":
          description: "access token and refresh token"
          schema:
            $ref: "#/definitions/LoginRes"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "invalid username or password"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "404":
          description: "user not found with specified email"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /pos/login:
    x-swagger-router-controller: UserController
    post:
      description: "POS login, anonymous"
      operationId: posLogin
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: "username and password"
          required: true
          schema:
            $ref: "#/definitions/LoginPOSReq"
      responses:
        "200":
          description: "access token and refresh token"
          schema:
            $ref: "#/definitions/LoginRes"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "invalid username or password"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "404":
          description: "user not found with specified email"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /users/refreshtoken:
    x-swagger-router-controller: UserController
    post:
      description: "Validate the access token and issue a new access token, non-anonymous"
      operationId: refreshToken
      security:
        - jwt: []
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginRes"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /users/appusers:
    x-swagger-router-controller: AdminUserController
    post:
      description: "Add a new user. non-anonymous, super-admin and admin only"
      operationId: addUser
      security:
        - jwt: []
      x-access-control:
        role: 
          - "admin" 
          - "super-admin"
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
        - in: body
          name: body
          description: "the details of the new user"
          required: true
          schema:
            $ref: "#/definitions/RegisterReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
    get:
      description: "Gets the list of all users. non-anonymous"
      operationId: getAllUsers
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/MinAppUser"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /users/pos:
    x-swagger-router-controller: AdminUserController
    post:
      description: "Add a new POS user. non-anonymous, super-admin and admin only"
      operationId: addPOSUser
      security:
        - jwt: []
      x-access-control:
        role: 
          - "admin" 
          - "super-admin"
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
        - in: body
          name: body
          description: "the details of the new user"
          required: true
          schema:
            $ref: "#/definitions/RegisterPOSReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /users/customers:
    x-swagger-router-controller: AdminUserController
    get:
      description: "Gets the list of all customers. non-anonymous"
      operationId: getAllCustomers
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Customers"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /pos/customers/profile:
    x-swagger-router-controller: POSController
    post:
      description: "Gets the profile of the customer. non-anonymous"
      operationId: getCustomerProfile
      security:
        - jwt: []
      x-access-control:
        role: 
          - "pos"
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
        - in: body
          name: body
          description: "the id of the customer"
          required: true
          schema:
            type: object
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customers"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "404":
          description: "if the specified customer key is not found"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /pos/customers/balance:
    x-swagger-router-controller: POSController
    post:
      description: "Gets the available points of a customer. non-anonymous"
      operationId: getCustomerBalance
      security:
        - jwt: []
      x-access-control:
        role: 
          - "pos"
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
        - in: body
          name: body
          description: "the id of the customer"
          required: true
          schema:
            type: object
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /pos/customers/earn:
    x-swagger-router-controller: POSController
    post:
      description: "Logs the transaction history of the user. non-anonymous"
      operationId: earnPoints
      security:
        - jwt: []
      x-access-control:
        role: 
          - "pos"
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
        - in: body
          name: body
          description: "the details of the transactions"
          required: true
          schema:
            type: object
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "404":
          description: "if the specified customer key is not found"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /pos/customers/return:
    x-swagger-router-controller: POSController
    post:
      description: "Updates the transaction amount of the customer. non-anonymous"
      operationId: returnTransaction
      security:
        - jwt: []
      x-access-control:
        role: 
          - "pos"
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
        - in: body
          name: body
          description: "the details of the transactions"
          required: true
          schema:
            type: object
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "404":
          description: "if the specified customer key is not found"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /pos/customers/redeem:
    x-swagger-router-controller: POSController
    post:
      description: "Redeems the points of the customer. non-anonymous"
      operationId: redeemPoints
      security:
        - jwt: []
      x-access-control:
        role: 
          - "pos"
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
        - in: body
          name: body
          description: "the details of the transactions"
          required: true
          schema:
            type: object
      responses:
        "200":
          description: "successful operation"
          schema:
           type: object
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "404":
          description: "if the specified customer key is not found"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /pos/customers/new:
    x-swagger-router-controller: POSController
    post:
      description: "Gets the list of all customers registered yesterday. non-anonymous"
      operationId: getNewCustomers
      security:
        - jwt: []
      x-access-control:
        role:
          - "pos"
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Customers"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "404":
          description: "if the specified customer key is not found"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /users/customers/{id}/transactions:
    x-swagger-router-controller: AdminUserController
    get:
      description: "Gets the list of transaction of the customer. non-anonymous"
      operationId: getCustomerTransactions
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
        - in: path
          name: id
          description: "the admin user id"
          required: true
          type: number
          format: long
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Transactions"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  
  /users/customers/profile:
    x-swagger-router-controller: AdminUserController
    get:
      description: "Gets the details of the customer. non-anonymous"
      operationId: findCustomerById
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customers"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /users/admins/{id}:
    x-swagger-router-controller: AdminUserController
    delete:
      description: "Delete an admin user. non-anonymous, super-admin and admin users"
      operationId: deleteUser
      security:
        - jwt: []
      x-access-control:
        role: 
          - "admin" 
          - "super-admin"
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
        - in: path
          name: id
          description: "the admin user id"
          required: true
          type: number
          format: long
      responses:
        "200":
          description: "successful operation"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "404":
          description: "if the specified entity with id is not found"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /users/email:
    x-swagger-router-controller: AdminUserController
    post:
      description: "sends email to all customers. non-anonymous"
      operationId: sendEmailToCustomers
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: "email and password"
          required: true
          schema:
            $ref: "#/definitions/LoginReq"
      responses:
        "200":
          description: "access token and refresh token"
          schema:
            $ref: "#/definitions/LoginRes"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "invalid username or password"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "404":
          description: "user not found with specified email"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /chart/priceRangeGender:
    x-swagger-router-controller: ChartController
    get:
      description: "Gets the average transaction per gender. non-anonymous"
      operationId: getPriceRangeGenderCombination
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Chart"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /chart/branchNewMembers:
    x-swagger-router-controller: ChartController
    get:
      description: "Gets the count of new members per branch. non-anonymous"
      operationId: getBranchNewMembersCombination
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Chart"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /chart/genderDemographics:
    x-swagger-router-controller: ChartController
    get:
      description: "Gets the count of males and females account. non-anonymous"
      operationId: getGenderDemographicsCombination
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Chart"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /chart/customerAgeRange:
    x-swagger-router-controller: ChartController
    get:
      description: "Gets the total number of males and females per age bracket. non-anonymous"
      operationId: getCustomerAgeRangeCombination
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Chart"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /chart/livedCity:
    x-swagger-router-controller: ChartController
    get:
      description: "Gets the number of members per city. non-anonymous"
      operationId: getLivedCityCombination
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Chart"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /chart/newMembers:
    x-swagger-router-controller: ChartController
    get:
      description: "Gets the total number of members and total number of new members. non-anonymous"
      operationId: getMembersCombination
      security:
        - jwt: []
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: "Bearer access token in format Bearer {{accessToken}}"
          required: true
          type: string
          format: string
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Chart"
        "400":
          description: "the validation failed, client request is invalid"
          schema:
            $ref: "#/definitions/ErrorDetail"
        "401":
          description: "access token is not valid"
          schema:
            $ref: "#/definitions/ErrorDetail"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  LoginReq:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  LoginRes:
    type: object
    required:
      - accessToken
      - refreshToken
    properties:
      # the access token
      accessToken:
        type: string
        description: "the access token that can be used as Authorization header"
      refreshToken:
        type: string
        description: "the refresh token that can be used to obtain a new access token in case of remember me"
  LoginPOSReq:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
      - username
      - password
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorDetail:
    type: object
    required:
      - message
      - code
    properties:
      code:
        type: string
        description: "the error code for future reference"
      message:
        type: string
        description: "the detailed description/cause of the error"
  RegisterReq:
    type: object
    required:
      - email
      - password
    properties:
      lastName:
        type: string
      firstName:
        type: string
      email:
        type: string
      password:
        type: string
  RegisterPOSReq:
    type: object
    required:
      - username
      - password
      - branchId
    properties:
      username:
        type: string
      password:
        type: string
      branchId:
        type: number
  MinAppUser:
    type: object
    required:
      - id
      - email
    properties:
      id:
        type: number
        description: "the user's unique id"
      firstName:
        type: 
          - string
          - 'null'
        description: "the user's first name"
      lastName:
        type: 
          - string
          - 'null'
        description: "the user's last name"
      email:
        type: string
        description: "the user's email"
      status:
        type: string
        description: "the user's status"
      role:
        type: string
        description: "the user's role"
      createdAt:
        type: string
        description: "the date the user was created"
      creator:
        type: 
          - string
          - 'null'
        description: "the user who added this user"
      lastLogin:
        type: 
          - string
          - 'null'
        description: "the date when was the user last login"
  Customers:
    type: object
    required:
      - customerKey
      - email
    properties:
      customerKey:
        type: string
        description: "the customer's unique customerKey"
      firstName:
        type: 
          - string
          - 'null'
        description: "the customer's first name"
      lastName:
        type: 
          - string
          - 'null'
        description: "the customer's last name"
      email:
        type: string
        description: "the customer's email"
      gender:
        type: 
          - string
          - 'null'
        description: "the customer's gender"
      isActive:
        type: boolean
        description: "the customer's active status"
      city:
        type: 
          - string
          - 'null'
        description: "the customer's city"
      birthday:
        type: 
          - string
          - 'null'
        description: "the customer's birthday"
      contactNumber:
        type: 
          - string
          - 'null'
        description: "the customer's contact number"
      createdAt:
        type: string
        description: "the date the customer was created"
      updatedAt:
        type: string
        description: "the date when was the customer details modified"
  Transactions:
    type: object
    required:
      - createdAt
      - transactionType
      - amount
    properties:
      id:
        type: number
        description: "the transaction's unique id"
      customerId:
        type: number
        description: "the customer's unique id"
      wallet:
        type: 
          - string
          - 'null'
        description: "the customer's wallet"
      transactionType:
        type: string
        description: "the transaction type, whether credit or debit"
      amount:
        type: number
        format: double
        description: "the amount of transaction"
        maximum: 999999999
        minimum: 0
      description:
        type: 
          - string
          - 'null'
        description: "the transaction's description"
      status:
        type: string
        description: "the customer's status, whether it is already approved or still pending"
      expirationDate:
        type: 
          - string
          - 'null'
        description: "the datetime when will the amount expire"
      createdAt:
        type: string
        description: "the date the customer was created"
      updatedAt:
        type: string
        description: "the date when was the customer details modified"
  Chart:
    type: object
    required:
      - daily
      - monthly
      - yearly
    properties:
      daily:
        type: object
        description: "the average transaction per gender in a daily basis"
      monthly:
        type: object
        description: "the average transaction per gender in a monthly basis"
      yearly:
        type: object
        description: "the average transaction per gender in a yearly basis"
  NewTransactionReq:
    type: object
    properties:
      customerKey:
        type: string
      branchId:
        type: number
      referenceNumber:
        type: 
          - string
          - 'null'
      transactionAmount:
        type: number
        format: double
        description: "the amount of transaction"
        maximum: 999999999
        minimum: 0
    required:
      - customerKey
      - branchId
      - transactionAmount
